nodeJS MongoDB test 
-------------------
based on: http://cwbuecheler.com/web/tutorials/2013/node-express-mongo/

This is a DB-driven web app !

Dependancies:
See package.json  (Note: Update package.json. See node-modules dir)

Summary:
Jade - use Jade or another templating engine to gain access to our Node/Express-based data. Jade's not hard to learn if you already know HTML. 
(Just remember that you really have to pay attention to indentation or things will go badly wrong.)

Start Database
---------------
MongoDB - MongoDB uses JSON for its structure. How handy is that?
$ mongod --dbpath /path/to/nodetest1/data

In another terminal 

[allison@gandalf nodetest1]$ mongo
MongoDB shell version: 2.4.6
connecting to: test
> use nodetest2
switched to db nodetest2

Insert Data
------------
db.usercollection.insert({ "username" : "fred", "realname" : "Fred Flintstone", "phone" : "123-4567", "address" : "123 Rocky Rd.", "email" : "fred@bedrock.net" })

 db.usercollection.find().pretty()  // Pretty provides line breaks
>  db.usercollection.find().pretty()
{
	"_id" : ObjectId("52aa0eb3d044355a34033bdd"),
	"username" : "fred",
	"realname" : "Fred Flintstone",
	"phone" : "123-4567",
	"address" : "123 Rocky Rd.",
	"email" : "fred@bedrock.net"
}

A quick note on DB structure: obviously in the long run you're unlikely to be storing everything at the top level. There are a ton of resources on the internet for schema design in MongoDB. Google is your friend!

newstuff = [{ "username" : "wilma", "realname" : "Wilma Flintstone", "phone" : "123-4567", "address" : "123 Rocky Rd.", "city" : "Bedrock", "email" : "wilma@bedrock.net" }, 
{ "username" : "Barney", "realname" : "Barney Rubble", "phone" : "123-7654", "address" : "125 Rocky Rd.", "email" : "barney@bedrock.net" }]
db.usercollection.insert(newstuff);

